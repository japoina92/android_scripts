#!/bin/bash
# Copyright (C) 2014 Sean Donovan

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#    http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if [ ! "$INIT" ]; then
	cd $(dirname $0)
	export SCRIPT=$(echo "buildautomenu")
	../headerfile
	exit 0
fi

menu(){
clear

echo $KITCHENTITLE
echo $KITCHENUNDERLINE
echo $BUILDAUTOMENUTITLE
echo "  1. $BUILDAUTOMENU1"
echo "  2. $BUILDAUTOMENU2"
echo "  3. $BUILDAUTOMENU3"
echo "  4. $BUILDAUTOMENU4"
echo "  5. $BUILDAUTOMENU5"
echo "  6. $BUILDAUTOMENU6"
echo "  7. $MENUGOBACK"
echo ""
read -p "$KITCHENMENUWHICH" buildautoconfig

if [ ! "$buildautoconfig" ] || ( echo $buildautoconfig | grep -q [A-Za-z] ) || [ $buildautoconfig -gt "7" ]; then
	echo ""
	echo $NOTPROPERSELECTION
	read -p "$ENTERTOCONTINUE" done
	menu
fi

if [ $buildautoconfig == "1" ]; then
	buildauto
fi

if [ $buildautoconfig == "2" ]; then
	addautorepo () {
	clear

	echo $KITCHENTITLE
	echo $KITCHENUNDERLINE
	echo $BUILDAUTOMENUSETAUTO
	echo "  1. $BUILDREPOMENU1"
	echo "  2. $BUILDREPOMENU2"
	echo "  3. $BUILDREPOMENU3"
	echo "  4. $BUILDREPOMENU4"
	echo "  5. $BUILDREPOMENU5"
	echo "  6. $BUILDREPOMENU6"
	echo "  7. $BUILDREPOMENU7"
	echo "  8. $BUILDREPOMENU8"
	echo "  9. $BUILDREPOMENU9"
	echo "  10. $BUILDREPOMENU10"
	echo "  11. $BUILDAUTOMENUMOVEON"
	echo "  12. $MENUGOBACK"
	echo ""
	read -p "$KITCHENMENUWHICH" version

	if [ ! "$version" ] || ( echo $version | grep -q [A-Za-z] ) || [ $version -gt "12" ]; then
		echo ""
		echo $NOTPROPERSELECTION
		read -p "$ENTERTOCONTINUE" done
		addautorepo
	fi

	if [ $version == "1" ]; then
		repodefine=$(echo "aokp")
		. repodefiner
	fi

	if [ $version == "2" ]; then
		repodefine=$(echo "aosp43")
		. repodefiner
	fi

	if [ $version == "3" ]; then
		repodefine=$(echo "aosp")
		. repodefiner
	fi

	if [ $version == "4" ]; then
		repodefine=$(echo "carbon")
		. repodefiner
	fi

	if [ $version == "5" ]; then
		repodefine=$(echo "cm10")
		. repodefiner
	fi

	if [ $version == "6" ]; then
		repodefine=$(echo "cm")
		. repodefiner
	fi

	if [ $version == "7" ]; then
		repodefine=$(echo "evervolv")
		. repodefiner
	fi

	if [ $version == "8" ]; then
		repodefine=$(echo "omni")
		. repodefiner
	fi

	if [ $version == "9" ]; then
		repodefine=$(echo "pacman")
		. repodefiner
	fi

	if [ $version == "10" ]; then
		repodefine=$(echo "paranoid")
		. repodefiner
	fi

	if [ $version == "11" ]; then
		addautodevice
	fi

	if [ $version == "12" ]; then
		echo ""
		read -p "$ENTERTOCONTINUE" done
		menu
	fi

	if ( ! find $LOCAL/config/scriptfolder &> /dev/null ); then
		echo "$SCRIPT_REPO-$REPO_PLATFORM" > $LOCAL/config/scriptfolder
	else
		echo "$SCRIPT_REPO-$REPO_PLATFORM" >> $LOCAL/config/scriptfolder
	fi

	if ( ! find $LOCAL/config/scriptautosync &> /dev/null ); then
		echo $repodefine > $LOCAL/config/scriptautosync
	else
		echo $repodefine >> $LOCAL/config/scriptautosync
	fi

	echo "$BUILDAUTOMENUADD1 $repo_name $BUILDAUTOMENUADD2"
	read -p "$ENTERTOCONTINUE" done
	
	addautorepo
	}

	addautodevice(){
	clear

	echo $KITCHENTITLE
	echo $KITCHENUNDERLINE
	echo $BUILDAUTOMENUTYPEDEVICE
	echo $BUILDOTHERTYPELIST
	echo $BUILDOTHERTYPEEXIT
	read auto_device

	if [ ! "$auto_device" ]; then
		echo ""
		echo $NOTPROPERSELECTION
		read -p "$ENTERTOCONTINUE" done
		addautodevice
	fi

	if [ $auto_device == "exit" ]; then
		read -p "$ENTERTOCONTINUE" done
		menu
	fi

	if ( ! find $LOCAL/config/scriptdevice &> /dev/null ); then
		echo $auto_device > $LOCAL/config/scriptdevice
	else
		echo $auto_device >> $LOCAL/config/scriptdevice
	fi

	echo "$BUILDAUTOMENUADD1 $auto_device $BUILDAUTOMENUADD2"
	read -p "$ENTERTOCONTINUE" done

	addautodevice
	}

	addautorepo
fi

if [ $buildautoconfig == "3" ]; then
	echo ""
	echo $BUILDAUTOMENUWANTTOCLEAR
	read clearanswer

	if [ "$clearanswer" == $ANSWERYES ] || [ "$clearanswer" == $ANSWERY ]; then
		rm -rf $LOCAL/config/scriptfolder
		rm -rf $LOCAL/config/scriptautosync
		rm -rf $LOCAL/config/scriptdevice
		echo $BUILDAUTOMENUCLEARED
		read -p "$ENTERTOCONTINUE" done
		menu
	else
		echo $BUILDAUTOMENUNOTCLEARED
		read -p "$ENTERTOCONTINUE" done
		menu
	fi
fi

if [ $buildautoconfig == "4" ]; then
	if ( ! find $LOCAL/config/toggleoutfile &> /dev/null ); then
		cd $LOCAL/config
		touch toggleoutfile
		echo $BUILDAUTOMENUOUTPUT
		echo $BUILDAUTOMENUSOMEWHERE
		read -p "$BUILDAUTOMENUTYPEOUTPUT" answer

		if [ "$answer" == $ANSWERYES ] || [ "$answer" == $ANSWERY ]; then
			echo $BUILDAUTOMENUTYPEABSOLUTE
			read outfilelocation

			echo $outfilelocation > outfile
			echo "$BUILDAUTOMENUOUTPUTSENT $outfilelocation"
			read -p "$ENTERTOCONTINUE" done
			menu
		else
			echo "$BUILDAUTOMENUOUTPUTSENT $( cd $LOCAL/.. && pwd )"
			read -p "$ENTERTOCONTINUE" done
			menu
		fi
	else
		rm -rf $LOCAL/config/toggleoutfile
		rm -rf $LOCAL/config/outfile
		echo $BUILDAUTOMENUOUTPUTCLEAR
		read -p "$ENTERTOCONTINUE" done
		menu
	fi
fi

if [ $buildautoconfig == "5" ]; then
	if ( ! find $LOCAL/config/otherrepoauto &> /dev/null ); then
		cd $LOCAL/config

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		echo "# $BUILDAUTOMENUADDBELOWREPO" > otherrepoauto

		nano otherrepoauto
		sed -i "/# /d" otherrepoauto
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		echo "# $BUILDAUTOMENUADDBELOWDEVICE" > otherdeviceauto
		
		nano otherdeviceauto
		sed -i "/# /d" otherdeviceauto

		echo $BUILDAUTOMENUOTHERREPOON
		read -p "$ENTERTOCONTINUE" done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	else
		rm -f $LOCAL/config/otherrepoauto
		rm -f $LOCAL/config/otherdeviceauto
		echo $BUILDAUTOMENUOTHERREPOOFF
		read -p "$ENTERTOCONTINUE" done
	fi
fi

if [ $buildautoconfig == "6" ]; then
	if ( ! find $LOCAL/config/sleepybuildserver &> /dev/null ); then
		cd $LOCAL/config

		sleepymenu(){

		echo $KITCHENTITLE
		echo $KITCHENUNDERLINE
		echo $BUILDAUTOMENUCOMPSLEEPTIME1
		echo $BUILDAUTOMENUCOMPSLEEPTIME2
		echo "  1. $BUILDAUTOMENUSLEEPMENU1"
		echo "  2. $BUILDAUTOMENUSLEEPMENU2"
		echo "  3. $MENUGOBACK"
		echo ""
		read -p "$KITCHENMENUWHICH" kindoftime

		if [ ! "$kindoftime" ] || ( echo $kindoftime | grep -q [A-Za-z] ) || [ $kindoftime -gt "3" ]; then
			echo ""
			echo $NOTPROPERSELECTION
			read -p "$ENTERTOCONTINUE" done
			sleepymenu
		fi

		if [ $kindoftime == "1" ]; then
			timekind=$(echo "specifictime")
			echo $BUILDAUTOMENUSPECIFIC1
			echo $BUILDAUTOMENUSPECIFIC2
			read sleeptime

			echo $sleeptime > sleepybuildserver
		fi

		if [ $kindoftime == "2" ]; then
			timekind=$(echo "hoursfromnow")
			echo $BUILDAUTOMENUHOURS1
			echo $BUILDAUTOMENUHOURS2
			read sleeptime

			echo $sleeptime > sleepybuildserver
		fi

		if [ $kindoftime == "3" ]; then
			echo ""
			read -p "$ENTERTOCONTINUE" done
			menu
		fi

		echo $BUILDAUTOMENUTYPEPASSY
		while true; do
			read -p "$star" -r -s -n 1 letter
			star="*"

			if [ "$letter" == "" ]; then
				break
			fi

			passy=$passy$letter
		done

		echo
		echo $passy >> sleepybuildserver
		echo $timekind >> sleepybuildserver

		echo $BUILDAUTOMENUSLEEPON
		read -p "$ENTERTOCONTINUE" done
		
		}
		sleepymenu
	else
		rm -f $LOCAL/config/sleepybuildserver
		echo $BUILDAUTOMENUSLEEPOFF
		read -p "$ENTERTOCONTINUE" done
	fi

fi

if [ $buildautoconfig == "7" ]; then
	echo ""
	read -p "$MAINMENURETURN" done
	exit 0
fi
menu
}
menu
