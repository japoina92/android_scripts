#!/bin/bash
# Copyright (C) 2014 Sean Donovan

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#    http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if [ ! "$INIT" ]; then
	cd $(dirname $0)
	export SCRIPT=$(echo "builddevice")
	../headerfile
	exit 0
fi

repomenu () {
clear

echo $KITCHENTITLE
echo $KITCHENUNDERLINE
echo "$devicefullname $BUILDDEVICEBEBUILT"
echo ""
echo $BUILDDEVICEWHICHREPO
echo "  1. $BUILDREPOMENU1"
echo "  2. $BUILDREPOMENU2"
echo "  3. $BUILDREPOMENU3"
echo "  4. $BUILDREPOMENU4"
echo "  5. $BUILDREPOMENU5"
echo "  6. $BUILDREPOMENU6"
echo "  7. $BUILDREPOMENU7"
echo "  8. $BUILDREPOMENU8"
echo "  9. $BUILDREPOMENU9"
echo "  10. $BUILDREPOMENU10"
echo "  11. $MENUGOBACK"
echo ""
read -p "$KITCHENMENUWHICH" version

if [ ! "$version" ] || ( echo $version | grep -q [A-Za-z] ) || [ $version -gt "11" ]; then
	echo ""
	echo $NOTPROPERSELECTION
	read -p "$ENTERTOCONTINUE" done
	menu
fi

if [ $version == "1" ]; then
	repodefine=$(echo "aokp")
	. repodefiner
fi

if [ $version == "2" ]; then
	repodefine=$(echo "aosp43")
	. repodefiner
fi

if [ $version == "3" ]; then
	repodefine=$(echo "aosp")
	. repodefiner
fi

if [ $version == "4" ]; then
	repodefine=$(echo "carbon")
	. repodefiner
fi

if [ $version == "5" ]; then
	repodefine=$(echo "cm11")
	. repodefiner
fi

if [ $version == "6" ]; then
	repodefine=$(echo "cm")
	. repodefiner
fi

if [ $version == "7" ]; then
	repodefine=$(echo "evervolv")
	. repodefiner
fi

if [ $version == "8" ]; then
	repodefine=$(echo "omni")
	. repodefiner
fi

if [ $version == "9" ]; then
	repodefine=$(echo "pacman")
	. repodefiner
fi

if [ $version == "10" ]; then
	repodefine=$(echo "paranoid")
	. repodefiner
fi

if [ $version == "11" ]; then
	echo ""
	read -p "$BUILDMENURETURN" done
	exit 0
fi

if ( ! find $REPOS/$SCRIPT_REPO-$REPO_PLATFORM -maxdepth 1 &> /dev/null ); then
	echo ""
	echo $BUILDREPONOTSETUP
	read -p "$ENTERTOCONTINUE" done
	repomenu
fi

devicecheck
}

devicecheck(){

if [ $SCRIPT_REPO == "aokp" ]; then
	if ( ! sed -e 's/.*aokp_//g' \
	-e 's/-userdebug//' \
	$REPOS/aokp-jb/vendor/aokp/vendorsetup.sh | grep -q $SCRIPT_DEVICE ); then
		echo ""
		echo $BUILDDEVICENOTCOMPATIBLE
		read -p "$BUILDMENURETURN" done
		exit 0
	fi
fi

if [ $SCRIPT_REPO == "aosp" ]; then
	if ( ! sed -e 's/.*aosp_//g' \
	-e 's/-userdebug//' \
	$REPOS/aosp-$REPO_PLATFORM/device/*/$SCRIPT_DEVICE/vendorsetup.sh | grep -q $SCRIPT_DEVICE ); then
		echo ""
		echo $BUILDDEVICENOTCOMPATIBLE
		read -p "$BUILDMENURETURN" done
		exit 0
	fi	
fi

if [ $SCRIPT_REPO == "carbon" ]; then
	if ( ! sed -e 's/.*carbon_//g' \
	-e 's/-userdebug//' \
	$REPOS/carbon-kitkat/vendor/carbon/vendorsetup.sh | grep -q $SCRIPT_DEVICE ); then
		echo ""
		echo $BUILDDEVICENOTCOMPATIBLE
		read -p "$BUILDMENURETURN" done
		exit 0
	fi	
fi

if [ $SCRIPT_REPO == "cm" ]; then
	if ( ! cat $LOCAL/config/cm-master-list | grep -q $SCRIPT_DEVICE ); then
		echo ""
		echo $BUILDDEVICENOTCOMPATIBLE
		read -p "$BUILDMENURETURN" done
		exit 0
	fi
fi

if [ $SCRIPT_REPO == "evervolv" ]; then
	if ( ! sed -e 's/.*ev_//g' \
	-e 's/-userdebug//' \
	$REPOS/evervolv-kitkat/vendor/ev/vendorsetup.sh | grep -q $SCRIPT_DEVICE ); then
		echo ""
		echo $BUILDDEVICENOTCOMPATIBLE
		read -p "$BUILDMENURETURN" done
		exit 0
	fi
fi

if [ $SCRIPT_REPO == "omni" ]; then
	if ( ! sed -e 's/.*omni_//g' \
	-e 's/-userdebug//' \
	$REPOS/omni-kitkat/device/*/$SCRIPT_DEVICE/vendorsetup.sh | grep -q $SCRIPT_DEVICE ); then
		echo ""
		echo $BUILDDEVICENOTCOMPATIBLE
		read -p "$BUILDMENURETURN" done
		exit 0
	fi	
fi

if [ $SCRIPT_REPO == "pacman" ]; then
	if ( ! sed -e 's/.*pac_//g' \
	-e 's/-userdebug//' \
	$REPOS/pacman-jb/vendor/pac/vendorsetup.sh | grep -q $SCRIPT_DEVICE ); then
		echo ""
		echo $BUILDDEVICENOTCOMPATIBLE
		read -p "$BUILDMENURETURN" done
		exit 0
	fi
fi

if [ $SCRIPT_REPO == "paranoid" ]; then
	if ( ! sed -e 's/.*pa_//g' \
	-e 's/-userdebug//' \
	$REPOS/paranoid-jb/vendor/pa/vendorsetup.sh | grep -q $SCRIPT_DEVICE ); then
		echo ""
		echo $BUILDDEVICENOTCOMPATIBLE
		read -p "$BUILDMENURETURN" done
		exit 0
	fi
fi

buildandro

exit 0
}

nexus4menu(){
clear

echo $KITCHENTITLE
echo $KITCHENUNDERLINE
echo $BUILDMENUTITLE
echo "  1. $BUILDDEVICENEXUS4"
echo "  2. $MENUGOBACK"
echo ""
read -p "$KITCHENMENUWHICH" buildnexus4

if [ ! "$buildnexus4" ] || ( echo $buildnexus4 | grep -q [A-Za-z] ) || [ $buildnexus4 -gt "2" ]; then
	echo ""
	echo $NOTPROPERSELECTION
	read -p "$ENTERTOCONTINUE" done
	nexus4menu
fi

if [ $buildnexus4 == "1" ]; then
	devicefullname=$(echo $NEXUS4)
	export SCRIPT_DEVICE=$(echo "mako")
	repomenu
fi

if [ $buildnexus4 == "2" ]; then
	echo ""
	read -p "$ENTERTOCONTINUE" done
	exit 0
fi
nexus4menu
}

nexus5menu(){
clear

echo $KITCHENTITLE
echo $KITCHENUNDERLINE
echo $BUILDMENUTITLE
echo "  1. $BUILDDEVICENEXUS5"
echo "  2. $MENUGOBACK"
echo ""
read -p "$KITCHENMENUWHICH" buildnexus5

if [ ! "$buildnexus5" ] || ( echo $buildnexus5 | grep -q [A-Za-z] ) || [ $buildnexus5 -gt "2" ]; then
	echo ""
	echo $NOTPROPERSELECTION
	read -p "$ENTERTOCONTINUE" done
	nexus5menu
fi

if [ $buildnexus5 == "1" ]; then
	devicefullname=$(echo $NEXUS5)
	export SCRIPT_DEVICE=$(echo "hammerhead")
	repomenu
fi

if [ $buildnexus5 == "2" ]; then
	echo ""
	read -p "$ENTERTOCONTINUE" done
	exit 0
fi
nexus5menu
}

gnexusmenu(){
clear

echo $KITCHENTITLE
echo $KITCHENUNDERLINE
echo $BUILDMENUTITLE
echo "  1. $BUILDDEVICEGSMGNEXUS"
echo "  2. $BUILDDEVICESPRGNEXUS"
echo "  3. $BUILDDEVICEVZWGNEXUS"
echo "  4. $BUILDALLABOVE"
echo "  5. $MENUGOBACK"
echo ""
read -p "$KITCHENMENUWHICH" buildgnexus

if [ ! "$buildgnexus" ] || ( echo $buildgnexus | grep -q [A-Za-z] ) || [ $buildgnexus -gt "5" ]; then
	echo ""
	echo $NOTPROPERSELECTION
	read -p "$ENTERTOCONTINUE" done
	gnexusmenu
fi

if [ $buildgnexus == "1" ]; then
	devicefullname=$(echo $GSMGNEXUS)
	export SCRIPT_DEVICE=$(echo "maguro")
	repomenu
fi

if [ $buildgnexus == "2" ]; then
	devicefullname=$(echo $SPRGNEXUS)
	export SCRIPT_DEVICE=$(echo "toroplus")
	repomenu
fi

if [ $buildgnexus == "3" ]; then
	devicefullname=$(echo $VZWGNEXUS)
	export SCRIPT_DEVICE=$(echo "toro")
	repomenu
fi

if [ $buildgnexus == "4" ]; then
	devicefullname=$(echo $ALLGNEXUS)

	export SCRIPT_DEVICE=$(echo "maguro")
	repomenu

	export SCRIPT_DEVICE=$(echo "toroplus")
	export SLOPPYSECONDS=true
	devicecheck

	export SCRIPT_DEVICE=$(echo "toro")
	export SLOPPYSECONDS=true
	devicecheck
fi

if [ $buildgnexus == "5" ]; then
	echo ""
	read -p "$ENTERTOCONTINUE" done
	exit 0
fi
gnexusmenu
}


nexussmenu(){
clear

echo $KITCHENTITLE
echo $KITCHENUNDERLINE
echo $BUILDMENUTITLE
echo "  1. $BUILDDEVICEGSMNEXUSS"
echo "  2. $BUILDDEVICESPRNEXUSS"
echo "  3. $BUILDALLABOVE"
echo "  4. $MENUGOBACK"
echo ""
read -p "$KITCHENMENUWHICH" buildnexuss

if [ ! "$buildnexuss" ] || ( echo $buildnexuss | grep -q [A-Za-z] ) || [ $buildnexuss -gt "4" ]; then
	echo ""
	echo $NOTPROPERSELECTION
	read -p "$ENTERTOCONTINUE" done
	nexussmenu
fi

if [ $buildnexuss == "1" ]; then
	devicefullname=$(echo $GSMNEXUSS)
	export SCRIPT_DEVICE=$(echo "crespo")
	repomenu
fi

if [ $buildnexuss == "2" ]; then
	devicefullname=$(echo $SPRNEXUSS)
	export SCRIPT_DEVICE=$(echo "crespo4g")
	repomenu
fi

if [ $buildnexuss == "3" ]; then
	devicefullname=$(echo $ALLNEXUSS)

	export SCRIPT_DEVICE=$(echo "crespo")
	repomenu

	export SCRIPT_DEVICE=$(echo "crespo4g")
	export SLOPPYSECONDS=true
	devicecheck
fi

if [ $buildnexuss == "4" ]; then
	echo ""
	read -p "$ENTERTOCONTINUE" done
	exit 0
fi
nexussmenu
}

nexus7menu(){
clear

echo $KITCHENTITLE
echo $KITCHENUNDERLINE
echo $BUILDMENUTITLE
echo "  1. $BUILDDEVICEWIFINEXUS72012"
echo "  2. $BUILDDEVICEGSMNEXUS72012"
echo "  3. $BUILDDEVICEALLNEXUS72012"
echo "  4. $BUILDDEVICEWIFINEXUS72013"
echo "  5. $BUILDDEVICELTENEXUS72013"
echo "  6. $BUILDDEVICEALLNEXUS72013"
echo "  7. $BUILDALLABOVE"
echo "  8. $MENUGOBACK"
echo ""
read -p "$KITCHENMENUWHICH" buildnexus7

if [ ! "$buildnexus7" ] || ( echo $buildnexus7 | grep -q [A-Za-z] ) || [ $buildnexus7 -gt "8" ]; then
	echo ""
	echo $NOTPROPERSELECTION
	read -p "$ENTERTOCONTINUE" done
	nexus7menu
fi

if [ $buildnexus7 == "1" ]; then
	devicefullname=$(echo $WIFINEXUS72012)
	export SCRIPT_DEVICE=$(echo "grouper")
	repomenu
fi

if [ $buildnexus7 == "2" ]; then
	devicefullname=$(echo $GSMNEXUS72012)
	export SCRIPT_DEVICE=$(echo "tilapia")
	repomenu
fi

if [ $buildnexus7 == "3" ]; then
	devicefullname=$(echo $ALLNEXUS72012)

	export SCRIPT_DEVICE=$(echo "grouper")
	repomenu

	export SCRIPT_DEVICE=$(echo "tilapia")
	export SLOPPYSECONDS=true
	devicecheck
fi

if [ $buildnexus7 == "4" ]; then
	devicefullname=$(echo $WIFINEXUS72013)
	export SCRIPT_DEVICE=$(echo "flo")
	repomenu
fi

if [ $buildnexus7 == "5" ]; then
	devicefullname=$(echo $LTENEXUS72012)
	export SCRIPT_DEVICE=$(echo "deb")
	repomenu
fi

if [ $buildnexus7 == "6" ]; then
	devicefullname=$(echo $ALLNEXUS72013)

	export SCRIPT_DEVICE=$(echo "flo")
	repomenu

	export SCRIPT_DEVICE=$(echo "deb")
	export SLOPPYSECONDS=true
	devicecheck
fi

if [ $buildnexus7 == "7" ]; then
	devicefullname=$(echo $ALLNEXUS7)

	export SCRIPT_DEVICE=$(echo "grouper")
	repomenu

	export SCRIPT_DEVICE=$(echo "tilapia")
	export SLOPPYSECONDS=true
	devicecheck

	export SCRIPT_DEVICE=$(echo "flo")
	export SLOPPYSECONDS=true
	devicecheck

	export SCRIPT_DEVICE=$(echo "deb")
	export SLOPPYSECONDS=true
	devicecheck
fi

if [ $buildnexus7 == "7" ]; then
	echo ""
	read -p "$ENTERTOCONTINUE" done
	exit 0
fi
nexus7menu
}

nexus10menu(){
clear

echo $KITCHENTITLE
echo $KITCHENUNDERLINE
echo $BUILDMENUTITLE
echo "  1. $BUILDDEVICENEXUS10"
echo "  2. $MENUGOBACK"
echo ""
read -p "$KITCHENMENUWHICH" buildnexus10

if [ ! "$buildnexus10" ] || ( echo $buildnexus10 | grep -q [A-Za-z] ) || [ $buildnexus10 -gt "2" ]; then
	echo ""
	echo $NOTPROPERSELECTION
	read -p "$ENTERTOCONTINUE" done
	nexus10menu
fi

if [ $buildnexus10 == "1" ]; then
	devicefullname=$(echo "$NEXUS10")
	export SCRIPT_DEVICE=$(echo "manta")
	repomenu
fi

if [ $buildnexus10 == "2" ]; then
	echo ""
	read -p "$ENTERTOCONTINUE" done
	exit 0
fi
nexus10menu
}

xoommenu(){
clear

echo $KITCHENTITLE
echo $KITCHENUNDERLINE
echo $BUILDMENUTITLE
echo "  1. $BUILDDEVICEWIFIXOOM"
echo "  2. $BUILDDEVICEVZWXOOM"
echo "  3. $BUILDALLABOVE"
echo "  4. $MENUGOBACK"
echo ""
read -p "$KITCHENMENUWHICH" buildxoom

if [ ! "$buildxoom" ] || ( echo $buildxoom | grep -q [A-Za-z] ) || [ $buildxoom -gt "4" ]; then
	echo ""
	echo $NOTPROPERSELECTION
	read -p "$ENTERTOCONTINUE" done
	nexus10menu
fi

if [ $buildxoom == "1" ]; then
	devicefullname=$(echo $WIFIXOOM)
	export SCRIPT_DEVICE=$(echo "wingray")
	repomenu
fi

if [ $buildxoom == "2" ]; then
	devicefullname=$(echo $VZWXOOM)
	export SCRIPT_DEVICE=$(echo "stingray")
	repomenu
fi

if [ $buildxoom == "3" ]; then
	devicefullname=$(echo $ALLXOOM)

	export SCRIPT_DEVICE=$(echo "stingray")
	repomenu

	export SCRIPT_DEVICE=$(echo "wingray")
	export SLOPPYSECONDS=true
	devicecheck
fi

if [ $buildxoom == "4" ]; then
	echo ""
	read -p "$ENTERTOCONTINUE" done
	exit 0
fi
xoommenu
}

allmenu(){
devicefullname=$(echo $ALLNEXUS)

export SCRIPT_DEVICE=$(echo "mako")
repomenu

export SCRIPT_DEVICE=$(echo "hammerhead")
export SLOPPYSECONDS=true
devicecheck

export SCRIPT_DEVICE=$(echo "maguro")
export SLOPPYSECONDS=true
devicecheck

export SCRIPT_DEVICE=$(echo "toroplus")
export SLOPPYSECONDS=true
devicecheck

export SCRIPT_DEVICE=$(echo "toro")
export SLOPPYSECONDS=true
devicecheck

export SCRIPT_DEVICE=$(echo "crespo")
export SLOPPYSECONDS=true
devicecheck

export SCRIPT_DEVICE=$(echo "crespo4g")
export SLOPPYSECONDS=true
devicecheck

export SCRIPT_DEVICE=$(echo "grouper")
export SLOPPYSECONDS=true
devicecheck

export SCRIPT_DEVICE=$(echo "tilapia")
export SLOPPYSECONDS=true
devicecheck

export SCRIPT_DEVICE=$(echo "flo")
export SLOPPYSECONDS=true
devicecheck

export SCRIPT_DEVICE=$(echo "deb")
export SLOPPYSECONDS=true
devicecheck

export SCRIPT_DEVICE=$(echo "manta")
export SLOPPYSECONDS=true
devicecheck

export SCRIPT_DEVICE=$(echo "stingray")
export SLOPPYSECONDS=true
devicecheck

export SCRIPT_DEVICE=$(echo "wingray")
export SLOPPYSECONDS=true
devicecheck
}

if [ ! "$BUILDDEVICEMENU" ]; then
	buildmenu
else
	$BUILDDEVICEMENU
fi
