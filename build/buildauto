#!/bin/bash
# Copyright (C) 2014 Sean Donovan

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#    http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Initial setup
if [ ! "$INIT" ]; then
	export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
	cd $(dirname $0)
	export SCRIPT=$(echo "buildauto")
	../headerfile
	exit 0
fi

export AUTO=true

# ::::::::::::::::::::::::::::::::::::::::::::::

if ( find $LOCAL/config/otherrepoauto &> /dev/null ); then
	autorepo=$( echo "otherrepoauto" )
else
	autorepo=$( echo "scriptfolder" )
fi

if ( find $LOCAL/config/otherdeviceauto &> /dev/null ); then
	autodevice=$( echo "otherdeviceauto" )
else
	autodevice=$( echo "scriptdevice" )
fi

# Check to see if auto builder can run
if ( ! find $LOCAL/config/$autorepo &> /dev/null ) \
&& ( ! find $LOCAL/config/$autodevice &> /dev/null ); then
	echo $BUILDAUTOBOTH
	echo $BUILDAUTOPLEASE
	read -p "$ENTERTOCONTINUE" done
	exit 0
elif ( ! find $LOCAL/config/$autorepo &> /dev/null ); then
	echo $BUILDAUTOREPO
	echo $BUILDAUTOPLEASE
	read -p "$ENTERTOCONTINUE" done
	exit 0
elif ( ! find $LOCAL/config/$autodevice &> /dev/null ); then
	echo $BUILDAUTODEVICE
	echo $BUILDAUTOPLEASE
	read -p "$ENTERTOCONTINUE" done
	exit 0
fi

# ::::::::::::::::::::::::::::::::::::::::::::::

# Buildoutput if
if ( ! find $LOCAL/config/toggleoutfile &> /dev/null ); then
	toggleout="cat"
	outfile=$(echo $LOCAL/..)
else
	if ( ! find $LOCAL/config/outfile &> /dev/null ); then
		outfile=$(echo $LOCAL/..)
	else
		outfile=$(cat $LOCAL/config/outfile | head -n 1)
	fi

	toggleout="tee -a $outfile/buildoutput-$(date +%Y%m%d).txt"
fi
# ::::::::::::::::::::::::::::::::::::::::::::::

# Repo folder setup
echo "EOF" >> $LOCAL/config/$autorepo

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
while true; do
	let repocount=$repocount+1
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	scriptfolder[$repocount]=$( cat $LOCAL/config/$autorepo | sed -n "$repocount"p )
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if [ "${scriptfolder[$repocount]}" == "EOF" ]; then
		break
	fi
done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

sed -i "/EOF/d" $LOCAL/config/$autorepo

# ::::::::::::::::::::::::::::::::::::::::::::::

# Device setup
echo "EOF" >> $LOCAL/config/$autodevice

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
while true; do
	let devicecount=$devicecount+1
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	scriptdevice[$devicecount]=$( cat $LOCAL/config/$autodevice | sed -n "$devicecount"p )
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if [ "${scriptdevice[$devicecount]}" == "EOF" ]; then
		break
	fi
done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

sed -i "/EOF/d" $LOCAL/config/$autodevice

# ::::::::::::::::::::::::::::::::::::::::::::::

# Sync repos
INIT=""
reposync -u kitchen 2>&1 | $toggleout
repocountdown=""

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
while true; do
	let repocountdown=$repocountdown+1

	if ( echo "${scriptfolder[$repocountdown]}" | grep -q "EOF" ); then
		break
	fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if ( ! find $LOCAL/config/otherrepoauto &> /dev/null ); then
		export REPO_SYNC=$( cat $LOCAL/config/scriptautosync | sed -n "$repocountdown"p )
		INIT=""
		reposync -u $REPO_SYNC 2>&1 | $toggleout
	else
		cd "$REPOS/otherrepo/${scriptfolder[$repocountdown]}"
		repo sync -j $NETWORKSYNC 2>&1 | $toggleout
	fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# ::::::::::::::::::::::::::::::::::::::::::::::

# Build Device
repocountdown=""
devicecountdown=""

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
while true; do
	let repocountdown=$repocountdown+1

	if ( echo "${scriptfolder[$repocountdown]}" | grep -q "EOF" ); then
		break
	fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if ( ! find $LOCAL/config/otherrepoauto &> /dev/null ); then
		export AUTO_BUILD=true
		export AUTO_BUILD_FOLDER=$( echo "${scriptfolder[$repocountdown]}" )
		export SCRIPT_REPO=$( echo "${scriptfolder[$repocountdown]}" | sed 's/-.*//' )
		export REPO_PLATFORM=$( echo "${scriptfolder[$repocountdown]}" | sed 's/.*-//' )
	else
		export OTHER_REPO=$( echo "${scriptfolder[$repocountdown]}" )
		export OTHER_REPO_FOLDER=$(echo "$REPOS/otherrepo/"${scriptfolder[$repocountdown]}"")
		export SCRIPT_REPO=$( echo "${scriptfolder[$repocountdown]}" | sed 's/-.*//' )
		export REPO_PLATFORM=$( echo "${scriptfolder[$repocountdown]}" | sed 's/.*-//' )
	fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	while true; do
		let devicecountdown=$devicecountdown+1

		if [ $devicecountdown == "2" ]; then
			export SLOPPYSECONDS=true
		fi

		if ( echo "${scriptdevice[$devicecountdown]}" | grep -q "EOF" ); then
			export SLOPPYSECONDS=""
			break
		fi

		export SCRIPT_DEVICE=$( echo "${scriptdevice[$devicecountdown]}" )
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		buildandro 2>&1 | $toggleout
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		# Publish Build ( if possible )
		if ( find $PUBLISH -maxdepth 1 &> /dev/null); then
			publishandro 2>&1 | $toggleout
		fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# ::::::::::::::::::::::::::::::::::::::::::::::

# Put computer to sleep ( if setup to do so )
if ( find $LOCAL/config/sleepybuildserver &> /dev/null ); then
	echo "" 2>&1 | $toggleout
	echo $BUILDAUTOWAIT 2>&1 | $toggleout
	sleep 10m
	echo $BUILDAUTOSLEEP 2>&1 | $toggleout

	sleeptime=$( cat $LOCAL/config/sleepybuildserver | sed -n 1p )
	passy=$( cat $LOCAL/config/sleepybuildserver | sed -n 2p )
	timekind=$( cat $LOCAL/config/sleepybuildserver | sed -n 3p )

	if [ $timekind == "specifictime" ]; then
		rawsleeptime=$((`date +%s -d $sleeptime` + 24*60*60))

		echo $passy | sudo -S rtcwake -n -l -m mem -t $rawsleeptime > $outfile/sleeptime-$(date +%Y%m%d).txt 2>&1
		sleep 30
		echo $passy | sudo -S rtcwake -l -m mem -t $rawsleeptime >> $outfile/sleeptime-$(date +%Y%m%d).txt 2>&1
	elif [ $timekind == "hoursfromnow" ]; then
		rawsleeptime=$((($sleeptime * 60) * 60))

		echo $passy | sudo -S rtcwake -n -l -m mem -s $rawsleeptime > $outfile/sleeptime-$(date +%Y%m%d).txt 2>&1
		sleep 30
		echo $passy | sudo -S rtcwake -l -m mem -s $rawsleeptime >> $outfile/sleeptime-$(date +%Y%m%d).txt 2>&1
	fi
fi
